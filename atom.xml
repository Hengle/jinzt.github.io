<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>金振涛个人主页</title>
  <icon>https://www.gravatar.com/avatar/cccb87fb7672ca8923d62bf56e478f23</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jinzt.github.io/"/>
  <updated>2019-07-11T11:40:41.184Z</updated>
  <id>https://jinzt.github.io/</id>
  
  <author>
    <name>金振涛</name>
    <email>jinzhentaohb@126.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>colyseus 使用</title>
    <link href="https://jinzt.github.io/posts/b2aa3fd2.html"/>
    <id>https://jinzt.github.io/posts/b2aa3fd2.html</id>
    <published>2019-07-11T10:44:49.673Z</published>
    <updated>2019-07-11T11:40:41.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>colyseus <a href="https://discuss.colyseus.io/" target="_blank" rel="noopener">主页</a></p><p>使用 colyseus 的优秀文章</p><ul><li><a href="https://indienova.com/u/cyclegtx/blogread/11315" target="_blank" rel="noopener">io类游戏快速开发 1</a></li><li><a href="https://indienova.com/u/cyclegtx/blogread/11322" target="_blank" rel="noopener">io类游戏快速开发 2 帧同步</a></li><li><a href="https://indienova.com/u/cyclegtx/blog" target="_blank" rel="noopener">IO类游戏快速开发 3 状态同步</a></li></ul><p>其它文章</p><ul><li><p><a href="https://www.helplib.com/GitHub/article_133851" target="_blank" rel="noopener">colyseus.js, 用于JavaScript的多人游戏客户端</a></p></li><li><p><a href="https://max.book118.com/html/2017/0522/108424723.shtm" target="_blank" rel="noopener">对等游戏平台的可扩展性与状态一致性的分析.pdf</a></p></li></ul><p>colyseus 作者的项目</p><ul><li><a href="https://github.com/colyseus/colyseus" target="_blank" rel="noopener">colyseus-server</a></li><li><a href="https://github.com/colyseus/colyseus.js" target="_blank" rel="noopener">colyseus.js</a></li><li><a href="https://github.com/colyseus/colyseus-examples" target="_blank" rel="noopener">colyseus-examples</a></li><li><a href="https://github.com/colyseus/colyseus-loadtest" target="_blank" rel="noopener">colyseus-loadtest</a></li><li><a href="https://github.com/colyseus/colyseus-monitor" target="_blank" rel="noopener">colyseus-monitor</a></li></ul><p>其它开发者</p><ul><li><a href="https://github.com/rbjs92/platformer-mmo" target="_blank" rel="noopener">platformer-mmo</a></li><li><a href="https://github.com/asimmon/bomberman-colyseus" target="_blank" rel="noopener">bomberman-colyseus</a></li><li><a href="https://github.com/memgame/mem-server-colyseus#development-setup" target="_blank" rel="noopener">mem-server-colyseus</a></li><li><a href="https://github.com/Loonride/colyseus-cluster-example/blob/master/server/index.js" target="_blank" rel="noopener">colyseus-cluster-example</a></li><li><a href="https://github.com/kaproslaci/colyseus-without-sync" target="_blank" rel="noopener">colyseus-without-sync</a></li><li><a href="https://github.com/keenlok/phaser-colyseus-pac" target="_blank" rel="noopener">phaser-colyseus-pac</a></li><li><a href="https://github.com/nicooga/multiplayer_shooter_game/tree/master/server" target="_blank" rel="noopener">multiplayer_shooter_game</a></li><li><a href="https://github.com/geeksesi/pong-client" target="_blank" rel="noopener">pong-client</a></li><li><a href="https://github.com/geeksesi/PongServer" target="_blank" rel="noopener">PongServer</a></li><li><a href="https://github.com/BroProducts/mem-server" target="_blank" rel="noopener">mem-server</a></li><li><a href="https://github.com/gmfc/Yggdrasill" target="_blank" rel="noopener">Yggdrasill</a></li><li><a href="https://github.com/pkchv/auditory/tree/master/server/src/colyseus" target="_blank" rel="noopener">auditory</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;colyseus &lt;a href=&quot;https://discuss.colyseus.io/&quot; target=&quot;_blank&quot; rel=&quot;n
      
    
    </summary>
    
      <category term="cocos creator" scheme="https://jinzt.github.io/categories/cocos-creator/"/>
    
    
      <category term="cocos creator" scheme="https://jinzt.github.io/tags/cocos-creator/"/>
    
      <category term="nodejs" scheme="https://jinzt.github.io/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>excel2json 使用</title>
    <link href="https://jinzt.github.io/posts/b2aa3fd2.html"/>
    <id>https://jinzt.github.io/posts/b2aa3fd2.html</id>
    <published>2019-07-11T09:04:07.095Z</published>
    <updated>2019-07-11T10:49:41.846Z</updated>
    
    <content type="html"><![CDATA[<p>工程代码 <a href="https://github.com/jinzt/excel2json" target="_blank" rel="noopener">https://github.com/jinzt/excel2json</a> 是根据 <a href="https://github.com/zdhsoft/excel2json" target="_blank" rel="noopener">https://github.com/zdhsoft/excel2json</a> 修改而来，非常感谢原作者。</p><h2 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h2><h3 id="excel表格配置"><a href="#excel表格配置" class="headerlink" title="excel表格配置"></a>excel表格配置</h3><p>excel表配置主要有tablelist标签页和其它内容标签页构成。</p><h4 id="tablelist标签页"><a href="#tablelist标签页" class="headerlink" title="tablelist标签页"></a>tablelist标签页</h4><p>tablelist标签页是用来导出其它内容标签页的配置，它包括 目标标签页、描述、导出文件名、导出字段、导出类型</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/posts/b2aa3fd2/1.png" alt="tablelist" title>                </div>                <div class="image-caption">tablelist</div>            </figure><p>每个记录代表一个导出操作，比如上图中每个标签页分别有两份导出配置记录，分别对应客户端使用和服务器使用，<br>他们的区别在于导出文件名和导出字段不一样。</p><p>tablelist 一共支持三种导出类型 key:array key:map key:value，这三种类型是我自己总结最常用的三种</p><h4 id="内容标签页"><a href="#内容标签页" class="headerlink" title="内容标签页"></a>内容标签页</h4><p>内容标签页的第一行是列名，第二行是列的类型，这里一共设计了6中类型，<br>分别是 INT、FLOAT、BOOL、STRING、OBJECT、ANY。前四种类型都很好理解，<br>OBJECT是json类型，它必须是一个合法json<br>ANY是任意类型，它可以是其它5种类型的任意一种，仅适用于key:value类型标签页,ANY类型列中</p><p><strong>key:array</strong> 是数组结构，它有多个列，每个列属性类型一样，所有列构成一个字典对象，作为数组的一条记录<br>,配置表示例如下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/posts/b2aa3fd2/2.png" alt="key:array" title>                </div>                <div class="image-caption">key:array</div>            </figure><p>导出 test_key_array_s.json 如下:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">&#123; <span class="attr">"ID"</span>:<span class="number">100</span>, <span class="attr">"Ratio"</span>:<span class="number">0.6</span>, <span class="attr">"Reward"</span>:[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>], <span class="attr">"TaxRatio"</span>:&#123;<span class="attr">"Ratio"</span>:<span class="number">1</span>, <span class="attr">"Base"</span>:<span class="number">10000</span>&#125; &#125;,</span><br><span class="line">&#123; <span class="attr">"ID"</span>:<span class="number">101</span>, <span class="attr">"Ratio"</span>:<span class="number">0.7</span>, <span class="attr">"Reward"</span>:[<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>], <span class="attr">"TaxRatio"</span>:&#123;<span class="attr">"Ratio"</span>:<span class="number">1</span>, <span class="attr">"Base"</span>:<span class="number">10000</span>&#125; &#125;,</span><br><span class="line">&#123; <span class="attr">"ID"</span>:<span class="number">102</span>, <span class="attr">"Ratio"</span>:<span class="number">0.5</span>, <span class="attr">"Reward"</span>:[<span class="number">10</span>,<span class="number">15</span>,<span class="number">20</span>], <span class="attr">"TaxRatio"</span>:&#123;<span class="attr">"Ratio"</span>:<span class="number">1</span>, <span class="attr">"Base"</span>:<span class="number">1000</span>&#125; &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong>key:map</strong> 是字典结构，它有多个列，每个列属性类型一样，第一列作为字典的key并且只能是string类型<br>,配置表示例如下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/posts/b2aa3fd2/3.png" alt="key:map" title>                </div>                <div class="image-caption">key:map</div>            </figure><p>导出 test_key_map_s.json 如下:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"test001"</span>: &#123; <span class="attr">"Key"</span>:<span class="string">"test001"</span>, <span class="attr">"Name"</span>:<span class="string">"zhangsan"</span>, <span class="attr">"Age"</span>:<span class="number">18</span> &#125;,</span><br><span class="line"><span class="attr">"test002"</span>: &#123; <span class="attr">"Key"</span>:<span class="string">"test002"</span>, <span class="attr">"Name"</span>:<span class="string">"lisi"</span>, <span class="attr">"Age"</span>:<span class="number">19</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>key:value</strong> 是键值对结构，他是一种特殊字典结构，它只有两列，第一列作为key并且只能是string类型，第二列是值，它是任意类型<br>,配置表示例如下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/posts/b2aa3fd2/4.png" alt="key:value" title>                </div>                <div class="image-caption">key:value</div>            </figure><p>导出 test_key_value_s.json 如下:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"KEY_INT"</span>:<span class="number">100</span>,</span><br><span class="line"><span class="attr">"KEY_FLOAT"</span>:<span class="number">0.23</span>,</span><br><span class="line"><span class="attr">"KEY_BOOL"</span>:<span class="literal">true</span>,</span><br><span class="line"><span class="attr">"KEY_OBJECT_ARRAY"</span>:[<span class="number">10</span>,<span class="number">20</span>],</span><br><span class="line"><span class="attr">"KEY_OBJECT_DICT"</span>:&#123;<span class="attr">"Ratio"</span>:<span class="number">1</span>, <span class="attr">"Base"</span>:<span class="number">10000</span>&#125;,</span><br><span class="line"><span class="attr">"KEY_STRING"</span>:<span class="string">"string test"</span>,</span><br><span class="line"><span class="attr">"KEY_STRING_INT"</span>:<span class="string">"100"</span>,</span><br><span class="line"><span class="attr">"KEY_STRING_FLOAT"</span>:<span class="string">"0.23"</span>,</span><br><span class="line"><span class="attr">"KEY_STRING_BOOL"</span>:<span class="string">"true"</span>,</span><br><span class="line"><span class="attr">"KEY_STRING_OBJECT_ARRAY"</span>:<span class="string">"[10,20]"</span>,</span><br><span class="line"><span class="attr">"KEY_STRING_OBJECT_DICT"</span>:<span class="string">"\"&#123;\"Ratio\":1, \"Base\":10000&#125;\""</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="导出json"><a href="#导出json" class="headerlink" title="导出json"></a>导出json</h3><p>导出json的工具是使用python开发的，脚本 excel2json.py，可以直接使用脚本导出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python excel2json.py config.xlsx</span><br></pre></td></tr></table></figure><p>更方便的方式是使用打包后的二进制文件 excel2json.exe 进行导出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">excel2json.exe config.xlsx</span><br></pre></td></tr></table></figure><p>每次输入命令进行转换比较繁琐，这里使用windows批处理来优化，新建一个 convert.bat 文件，内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">:: delete all *.json</span><br><span class="line">echo del all *.json</span><br><span class="line">del /s *.json</span><br><span class="line"></span><br><span class="line">:: covert config</span><br><span class="line">excel2json.exe config.xlsx</span><br><span class="line"></span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>然后双击 convert.bat 即可自动转换，你也可以在批处理里加上 拷贝json到客户端及服务器目录,提交到git、svn等等</p><h3 id="json加载示范"><a href="#json加载示范" class="headerlink" title="json加载示范"></a>json加载示范</h3><p>这里使用golang来进行举例 load_json.go</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"encoding/json"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"io/ioutil"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> KeyMapItem <span class="keyword">struct</span> &#123;</span><br><span class="line">ID   <span class="keyword">string</span> <span class="string">`json:"ID"`</span></span><br><span class="line">Name <span class="keyword">string</span> <span class="string">`json:"Name"`</span></span><br><span class="line">Age  <span class="keyword">uint32</span> <span class="string">`json:"Age"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">loadKeyMapJson</span><span class="params">()</span></span> &#123;</span><br><span class="line">fileName := <span class="string">"test_key_map_s.json"</span></span><br><span class="line">data, err := ioutil.ReadFile(fileName)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"ReadFile %s open failed err:%+v"</span>, fileName, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> mapResult <span class="keyword">map</span>[<span class="keyword">string</span>]KeyMapItem</span><br><span class="line">err = json.Unmarshal(data, &amp;mapResult)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"ReadFile %s Unmarshal failed err:%+v"</span>, fileName, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"loadKeyMapJson :%+v"</span>, mapResult)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> probability <span class="keyword">struct</span> &#123;</span><br><span class="line">Ratio <span class="keyword">uint32</span> <span class="string">`json:"Ratio"`</span></span><br><span class="line">Base  <span class="keyword">uint32</span> <span class="string">`json:"Base"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> KeyArrayItem <span class="keyword">struct</span> &#123;</span><br><span class="line">ID       <span class="keyword">uint32</span>      <span class="string">`json:"ID"`</span></span><br><span class="line">Ratio    <span class="keyword">float32</span>     <span class="string">`json:"Ratio"`</span></span><br><span class="line">Reward   []<span class="keyword">uint32</span>    <span class="string">`json:"Reward"`</span></span><br><span class="line">TaxRatio probability <span class="string">`json:"TaxRatio"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">loadKeyArrayJson</span><span class="params">()</span></span> &#123;</span><br><span class="line">fileName := <span class="string">"test_key_array_s.json"</span></span><br><span class="line">data, err := ioutil.ReadFile(fileName)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"ReadFile %s open failed err:%+v"</span>, fileName, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> arrayResult []KeyArrayItem</span><br><span class="line">err = json.Unmarshal(data, &amp;arrayResult)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"ReadFile %s Unmarshal failed err:%+v"</span>, fileName, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"loadKeyArrayJson :%+v"</span>, arrayResult)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> KeyValueItem <span class="keyword">struct</span> &#123;</span><br><span class="line">KEY_INT          <span class="keyword">uint32</span>      <span class="string">`json:"KEY_INT"`</span></span><br><span class="line">KEY_FLOAT        <span class="keyword">float32</span>     <span class="string">`json:"KEY_FLOAT"`</span></span><br><span class="line">KEY_BOOL         <span class="keyword">bool</span>        <span class="string">`json:"KEY_BOOL"`</span></span><br><span class="line">KEY_OBJECT_ARRAY []<span class="keyword">uint32</span>    <span class="string">`json:"KEY_OBJECT_ARRAY"`</span></span><br><span class="line">KEY_OBJECT_DICT  probability <span class="string">`json:"KEY_OBJECT_DICT"`</span></span><br><span class="line"></span><br><span class="line">KEY_STRING              <span class="keyword">string</span> <span class="string">`json:"KEY_STRING"`</span></span><br><span class="line">KEY_STRING_INT          <span class="keyword">string</span> <span class="string">`json:"KEY_STRING_INT"`</span></span><br><span class="line">KEY_STRING_FLOAT        <span class="keyword">string</span> <span class="string">`json:"KEY_STRING_FLOAT"`</span></span><br><span class="line">KEY_STRING_BOOL         <span class="keyword">string</span> <span class="string">`json:"KEY_STRING_BOOL"`</span></span><br><span class="line">KEY_STRING_OBJECT_ARRAY <span class="keyword">string</span> <span class="string">`json:"KEY_STRING_OBJECT_ARRAY"`</span></span><br><span class="line">KEY_STRING_OBJECT_DICT  <span class="keyword">string</span> <span class="string">`json:"KEY_STRING_OBJECT_DICT"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">loadKeyValueJson</span><span class="params">()</span></span> &#123;</span><br><span class="line">fileName := <span class="string">"test_key_value_s.json"</span></span><br><span class="line">data, err := ioutil.ReadFile(fileName)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"ReadFile %s open failed err:%+v"</span>, fileName, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> valueResult KeyValueItem</span><br><span class="line">err = json.Unmarshal(data, &amp;valueResult)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"ReadFile %s Unmarshal failed err:%+v"</span>, fileName, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"loadKeyValueJson :%+v"</span>, valueResult)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">loadKeyMapJson()</span><br><span class="line">loadKeyArrayJson()</span><br><span class="line">loadKeyValueJson()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h2><p>如果需要对源码进行修改，那么需要安装python2.7</p><p>python脚本打包为exe借助了pyinstaller，这里使用pip安装pyinstaller，之后进行打包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pyinstaller</span><br></pre></td></tr></table></figure><p>安装好后就可以使用pyinstaller命令进行打包了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -F excel2json.py</span><br></pre></td></tr></table></figure><p>这样会在dist目录生成 excel2json.exe 可执行文件了</p><h2 id="star"><a href="#star" class="headerlink" title="star"></a>star</h2><p>欢迎star，个人博客 <a href="https://jinzt.github.io">https://jinzt.github.io</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;工程代码 &lt;a href=&quot;https://github.com/jinzt/excel2json&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/jinzt/excel2json&lt;/a&gt; 是根据 &lt;a href=&quot;ht
      
    
    </summary>
    
      <category term="tool" scheme="https://jinzt.github.io/categories/tool/"/>
    
    
      <category term="tool" scheme="https://jinzt.github.io/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>hexo 搭建博客</title>
    <link href="https://jinzt.github.io/posts/98b6a901.html"/>
    <id>https://jinzt.github.io/posts/98b6a901.html</id>
    <published>2019-07-11T08:23:45.261Z</published>
    <updated>2019-07-11T09:19:27.075Z</updated>
    
    <content type="html"><![CDATA[<p>搭建个人博客</p><h2 id="hexo快速开始"><a href="#hexo快速开始" class="headerlink" title="hexo快速开始"></a>hexo快速开始</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blogsite</span><br><span class="line"><span class="built_in">cd</span> blogsite</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><h2 id="部署github"><a href="#部署github" class="headerlink" title="部署github"></a>部署github</h2><h3 id="创建仓库jinzt-github-io-并开启gitpages"><a href="#创建仓库jinzt-github-io-并开启gitpages" class="headerlink" title="创建仓库jinzt.github.io 并开启gitpages"></a>创建仓库jinzt.github.io 并开启gitpages</h3><h3 id="安装-git-deploy-插件"><a href="#安装-git-deploy-插件" class="headerlink" title="安装 git-deploy 插件"></a>安装 git-deploy 插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="修改-config-yml：deploy配置项"><a href="#修改-config-yml：deploy配置项" class="headerlink" title="修改 _config.yml：deploy配置项"></a>修改 _config.yml：deploy配置项</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:jinzt/jinzt.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h3 id="配置自定义域名"><a href="#配置自定义域名" class="headerlink" title="配置自定义域名"></a>配置自定义域名</h3><p>source 目录下新建一个 CNAME 文件,然后文件里填入自定义域名 jinzt.top 如果没有自定义域名不用做这一步</p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br></pre></td></tr></table></figure><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><p>jinzt.github.io 或者自定义域名 jinzt.top 访问主页</p><h2 id="将代码纳入git管理"><a href="#将代码纳入git管理" class="headerlink" title="将代码纳入git管理"></a>将代码纳入git管理</h2><h3 id="创建一个私有仓库-blog-分支用于存放代码"><a href="#创建一个私有仓库-blog-分支用于存放代码" class="headerlink" title="创建一个私有仓库 blog 分支用于存放代码"></a>创建一个私有仓库 blog 分支用于存放代码</h3><p>git clone <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:jinzt/blog.git<br>cd blog</p><p>拷贝 blogsite 里内容到仓库 blog 目录</p><p>创建一个shell脚本方便发布 deploy.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/bash</span><br><span class="line"></span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo d -g</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;up blog&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h2 id="主题使用"><a href="#主题使用" class="headerlink" title="主题使用"></a>主题使用</h2><h3 id="主题推荐"><a href="#主题推荐" class="headerlink" title="主题推荐"></a>主题推荐</h3><ul><li><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">next</a></li><li><a href="https://github.com/yscoder/hexo-theme-indigo" target="_blank" rel="noopener">hexo-theme-mellow</a><br>这里选择 hexo-theme-indigo </li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h4><p>git clone <a href="https://github.com/yscoder/hexo-theme-indigo" target="_blank" rel="noopener">https://github.com/yscoder/hexo-theme-indigo</a> themes/indigo</p><h4 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-less --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-json-content --save</span><br><span class="line">npm install hexo-helper-qrcode --save</span><br></pre></td></tr></table></figure><h4 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h4><p>修改 站点配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: indigo</span><br></pre></td></tr></table></figure><h4 id="添加分类页"><a href="#添加分类页" class="headerlink" title="添加分类页"></a>添加分类页</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>修改 source/categories/index.md 增加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">layout: categories</span><br></pre></td></tr></table></figure><h4 id="添加标签页"><a href="#添加标签页" class="headerlink" title="添加标签页"></a>添加标签页</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>修改 source/tags/index.md 增加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">layout: tags</span><br></pre></td></tr></table></figure><h4 id="添加关于页"><a href="#添加关于页" class="headerlink" title="添加关于页"></a>添加关于页</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><p>修改 source/about/index.md 增加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">layout: about</span><br></pre></td></tr></table></figure><h4 id="避免-README-md-被渲染"><a href="#避免-README-md-被渲染" class="headerlink" title="避免 README.md 被渲染"></a>避免 README.md 被渲染</h4><p>在 source 目录下创建 README.md 然后在站点配置中修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip_render: README.md</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h4><h5 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h5><p>为了得到更好的使用体验，以下内容请务必填写完整，因为这些内容会在主题中得到展示。<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">更多</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: your title</span><br><span class="line">subtitle: your subtitle</span><br><span class="line">description: your description</span><br><span class="line">keywords: your keywords</span><br><span class="line">author: your name</span><br><span class="line">email: your email</span><br><span class="line">url: your site url</span><br></pre></td></tr></table></figure><h5 id="修改永久链接的默认格式"><a href="#修改永久链接的默认格式" class="headerlink" title="修改永久链接的默认格式"></a>修改永久链接的默认格式</h5><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>修改 站点配置 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># permalink: :year/:month/:day/:title/</span><br><span class="line"># permalink_defaults:</span><br><span class="line">permalink: posts/:abbrlink.html</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32  # 算法：crc16(default) and crc32</span><br><span class="line">  rep: hex    # 进制：dec(default) and hex</span><br></pre></td></tr></table></figure><h5 id="本地图片"><a href="#本地图片" class="headerlink" title="本地图片"></a>本地图片</h5><p>npm install hexo-asset-image –save</p><p>把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true</p><p>在 xxx.md 同层目录创建 xxx 目录，然后在 xxx.md 中 <figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/posts/98b6a901/3.png" alt="key:array" title>                </div>                <div class="image-caption">key:array</div>            </figure> 方式引用图片就可以了</p><h4 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h4><p>编辑主题配置文件，themes/indigo/_config.yml。</p><h5 id="左侧菜单"><a href="#左侧菜单" class="headerlink" title="左侧菜单"></a>左侧菜单</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home:</span><br><span class="line">    text: 主页</span><br><span class="line">    url: /</span><br><span class="line">  archives:</span><br><span class="line">    text: 归档</span><br><span class="line">    url: /archives</span><br><span class="line">  tags:</span><br><span class="line">    text: 标签</span><br><span class="line">    url: /tags</span><br><span class="line">  th-list:</span><br><span class="line">    text: 分类</span><br><span class="line">    url: /categories</span><br><span class="line">  github:</span><br><span class="line">    url: https://github.com/jinzt</span><br><span class="line">    target: _blank</span><br><span class="line">  weibo:</span><br><span class="line">    text: weibo</span><br><span class="line">    url: https://weibo.com/u/5838016173</span><br><span class="line">    target: _blank</span><br><span class="line">  link:</span><br><span class="line">    text: link</span><br><span class="line">    url: /custom</span><br></pre></td></tr></table></figure><h5 id="favicon"><a href="#favicon" class="headerlink" title="favicon"></a>favicon</h5><p>站点 logo，显示在浏览器当前标签页左上角。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">favicon: /favicon.ico</span><br></pre></td></tr></table></figure><h5 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h5><p>位于左侧菜单上方</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar: /img/avatar.jpg</span><br></pre></td></tr></table></figure><h5 id="邮箱"><a href="#邮箱" class="headerlink" title="邮箱"></a>邮箱</h5><p>头像下方</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">email: jinzhentaohb@126.com</span><br></pre></td></tr></table></figure><h5 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h5><p>评论使用 [valine] (<a href="https://valine.js.org/" target="_blank" rel="noopener">https://valine.js.org/</a>)</p><p>配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gitalk: true</span><br><span class="line">   owner:jinzt</span><br><span class="line">   repo:https://github.com/jinzt/Gitment.git</span><br><span class="line">   client_id:457419dabf2c70fa6083</span><br><span class="line">   client_secret:cb2fc4337105912d7170dab8b994d637f96afd79</span><br></pre></td></tr></table></figure><h5 id="文章打赏"><a href="#文章打赏" class="headerlink" title="文章打赏"></a>文章打赏</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">reward:</span><br><span class="line">  title: 谢谢大爷~             #显示的文字</span><br><span class="line">  wechat: /img/wechat.jpg     #微信，关闭设为 false</span><br><span class="line">  alipay: /img/alipay.jpg     #支付宝，关闭设为 false</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo官方文档</a></li><li><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">next主题文档</a></li><li><a href="https://uchuhimo.me/2017/04/11/genesis/#more" target="_blank" rel="noopener">如何使用 Hexo 和 GitHub Pages 搭建这个博客</a></li><li><a href="https://www.cnblogs.com/xingyunblog/p/8681205.html" target="_blank" rel="noopener">Hexo NexT 博客后台管理指南</a></li><li><a href="https://blog.rmiao.top/hexo-fold-block/" target="_blank" rel="noopener">Hexo next博客添加折叠块功能添加折叠代码块</a></li><li><a href="https://blog.rmiao.top/switch-gitcomment/" target="_blank" rel="noopener">Hexo next主题使用gitment评论</a></li><li><a href="https://yuanlichenai.cn/2019/03/03/music/" target="_blank" rel="noopener">markdown插入音乐</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;搭建个人博客&lt;/p&gt;
&lt;h2 id=&quot;hexo快速开始&quot;&gt;&lt;a href=&quot;#hexo快速开始&quot; class=&quot;headerlink&quot; title=&quot;hexo快速开始&quot;&gt;&lt;/a&gt;hexo快速开始&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;tab
      
    
    </summary>
    
      <category term="tool" scheme="https://jinzt.github.io/categories/tool/"/>
    
    
      <category term="markdown" scheme="https://jinzt.github.io/tags/markdown/"/>
    
      <category term="blog" scheme="https://jinzt.github.io/tags/blog/"/>
    
      <category term="hexo" scheme="https://jinzt.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>git 使用</title>
    <link href="https://jinzt.github.io/posts/86c88f6a.html"/>
    <id>https://jinzt.github.io/posts/86c88f6a.html</id>
    <published>2019-07-11T08:23:45.259Z</published>
    <updated>2019-07-11T08:59:18.582Z</updated>
    
    <content type="html"><![CDATA[<p>git 使用</p><p>…or create a new repository on the command line<br> echo “# blog” &gt;&gt; README.md<br>git init<br>git add README.md<br>git commit -m “first commit”<br>git remote add origin <a href="https://github.com/jinzt/blog.git" target="_blank" rel="noopener">https://github.com/jinzt/blog.git</a><br>git push -u origin master</p><p>…or push an existing repository from the command line<br> git remote add origin <a href="https://github.com/jinzt/blog.git" target="_blank" rel="noopener">https://github.com/jinzt/blog.git</a><br>git push -u origin master</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;git 使用&lt;/p&gt;
&lt;p&gt;…or create a new repository on the command line&lt;br&gt; echo “# blog” &amp;gt;&amp;gt; README.md&lt;br&gt;git init&lt;br&gt;git add README.md&lt;br&gt;gi
      
    
    </summary>
    
      <category term="tool" scheme="https://jinzt.github.io/categories/tool/"/>
    
    
      <category term="tool" scheme="https://jinzt.github.io/tags/tool/"/>
    
  </entry>
  
</feed>
